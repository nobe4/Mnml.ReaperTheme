; vim: foldmethod=indent syntax=lisp tabstop=2

; Notes
; tcp_background color, can't set it up using colors+background images.
; needs to be the same, can be 1px because it stretches in directions
; tcp_bg.png        = 1px bgcolor
; tcp_bgsel.png     = slightly lighter than tcp_bg.png
; tcp_idxbg*.png    = remove
; tcp_namebg*.png   = remove
; tcp_iconbg*       = remove
; X = {pan, width*, volume}
; 	tcp_X_knob_small = 1px transparent
; 	tcp_X_knob_stack = all the tcp steps
; 	*: width take the volume stack, no need for tcp_width_knob_stack
; transport_bg.png = 1px bgcolor
; mcp_extmixbg.png = 1px bgcolor
; mcp_extmixbg_sel.png = 1px ligter
; X = {fxlist, fxparm} Y = {bg, byp, empty, norm, off}
; 	mcp_X_Y.png = 3 shade of black transparency: 10%, 5%, 10% same pic for Y
; 	Color of the text on it is controlled by the colors

; Documentation

; Global variables
	; Reaper-defined
		version 6.0

		use_pngs 1     ; Use PNG images
		use_overlays 0 ; Don't use overlay, all images are simple.

		tcp_showborders 0
		mcp_showborders 1
		transport_showborders 0

		; Deprecated tint option, left to render the items background
		; ref: https://forum.cockos.com/showpost.php?p=1875981
		tinttcp 298
		; Don't display items peaks
		peaksedges 1

		; TODO
		tcp_vupeakwidth 5
		mcp_vupeakheight 2
		mcp_mastervupeakheight 4
		mcp_altmeterpos 0
		mcp_voltext_flags 5 5
		tcp_voltext_flags 5 5
		no_meter_reclbl 0

		; Sizing
		tcp_heights 1 12 20 20   ; TPC heights presets: supercollapsed, collapsed, small(norecarm), recarm size
		tcp_master_minheight 10
		envcp_min_height 12
		mcp_min_height 100
		tcp_folderindent 0 ; control the indent with tcp_folder_indent

	; Global text colors settings
		; If luminosity of track is too low, switch text to white
		set luma + + * 0.299 [trackcolor_r] * 0.587 [trackcolor_g] * 0.114 [trackcolor_b]
		set track_text_white luma{0}<100 1 0
		; The background color (0001) is basically transparent, but (0000) fails for some reason to be 100% transparent. We can't see it, so that's fine.
		set track_text_color [trackcolor_r trackcolor_g trackcolor_b 245 0 0 0 1]
		; If the track color is too dark, just put white
		set track_text_color ?track_text_white{0} [255 255 255 245 0 0 0 1] .
	
	; Track Control Panel
		set tcp_folder_indent 4          ; Px to indent a folder by
		set tcp_folder_width 30          ; Folder vertical width
		set tcp_label_width 100          ; Label size for each tcp row
		set tcp_meter_color [0]          ; Never display meter text on the tcp.
		set tcp_meter_width 20
		set tcp_min_label_width 180      ; Minimum size for the tcp label
		set tcp_max_button_width 385     ; Max size for the button section, 20 * 8 + 30 * 4 + 100 + 5 padding
		set tcp_row_height 20            ; Height of a TCP row
		set tcp_min_width tcp_row_height ; Min width of a row is its height
		set tcp_track_id_width 30        ; Width of the track id, enough for 999

		; Envelope Control Panel
		set envcp_button_max_width 155   ; 3 * 20 + 3 * 30 + 5 padding
		set envcp_value_width 60         ; Tuned by eye, roughly enough for max frequence and various effects value.
		set envcp_label_min_width envcp_value_width
		set envcp_text_color [255 255 255 120]

	; Mixer control panel
		set mcp_column_width 20
		set mcp_margin_h 5
		set mcp_width + * mcp_column_width 2 * mcp_margin_h 3
		set mcp_master_width + * mcp_column_width 4 * mcp_margin_h 3
		set mcp_label_height 15
		set mcp_label_margin 8
		set mcp_meter_unlit_color [255 255 255 120 0 0 0 0]
		set mcp_meter_lit_color [0 0 0 200 0 0 0 0]
		set mcp_meter_readout_color [255 255 255 120 0 0 0 0]

; Macro
	; Track Control Panel
		macro compute_tcp
			; Dynamic elements
				; tcp_supercollapsed is whether the parent height is too small for the tcp section
				set tcp_supercollapsed h<10 1 0

			; Default and minimal tcp size
				set tcp.size [300 100 tcp_min_width]

			; Indent
				set tcp_row_indent * tcp_folder_indent folderdepth{0}

			; Folder section.
				set tcp_folder_section_width + + 4 tcp_folder_width * tcp_folder_indent maxfolderdepth
				set tcp_folder_section [tcp_row_indent 0 tcp_folder_section_width h]
				set tcp_folder_compact_button + [5] [tcp_folder_section{0} tcp_folder_section{1} 20 20]
				set tcp_folder_modify_button + [5] [tcp_folder_section{0} 86 20 14 0 1 0 1]

				; Hide elements if supercollapsed
				set tcp_folder_section ?tcp_supercollapsed{0} [0] .
				set tcp_folder_compact_button ?tcp_supercollapsed{0} [0] .
				set tcp_folder_modify_button ?tcp_supercollapsed{0} [0] .

				set tcp_folder_section_end + tcp_folder_section{0} tcp_folder_section{2}

			; Buttons section
				set tcp_button_section_width - - - w tcp_folder_section{2} tcp_label_width tcp_meter_width
				; Width can't be lower than 0
				set tcp_button_section_width tcp_button_section_width{0}<0 0 .
				; Width can't be above max
				set tcp_button_section_width tcp_button_section_width{0}>tcp_max_button_width{0} tcp_max_button_width .
				set tcp_button_section [tcp_folder_section{2} 0 tcp_button_section_width h]

				; If too small for buttons, hide them
				set tcp_button_section h<20 [0] .

			; Label
				set tcp_label_section_width - - w tcp_button_section_width tcp_meter_width
				set tcp_label_section + [tcp_button_section{2} 0 tcp_label_section_width h] [tcp_folder_section{2}]
				; Hide the text, but not the border
				set tcp_label_section_collapsed - tcp_label_section [0 0 0 2]

			; Meter
				; Meter section is the position/size of the meter: rightmost - tcp width
				set meter_section - [w 0 tcp_meter_width h] [tcp_meter_width]
				; If supercollapsed, hide it.
				set meter_section ?tcp_supercollapsed{0} [0] .

			; First element to build from is the main section
			set previous_element [tcp_button_section]

		endMacro

		macro draw_tcp
			; Track id
				set tcp.trackidx + [0 0 tcp_row_indent] [0 0 tcp_track_id_width 100 0 0 0 1]
				; If collapsed, hide the text
				set tcp.trackidx ?tcp_supercollapsed{0} + tcp.trackidx [0 0 0 -2]

				; vertical margin for track number
				set tcp.trackidx.margin [tcp_row_indent 0 0 0 0.5 0.5]

				; font
				set tcp.trackidx.font [0]

				; color
				set tcp.trackidx.color track_text_color

			; Folders
				; folder compact button
					set tcp.foldercomp h<40 [0] tcp_folder_compact_button

				; folder button
					; If folder too small, hide modify button
					set tcp.folder h<40 [0] tcp_folder_modify_button

			; Meter view: the meter section wit
				set tcp.meter meter_section  ; set size
				set tcp.meter.vu.div [1] ; show divisions

				; meter text color
					set tcp.meter.readout.color tcp_meter_color
					set tcp.meter.scale.color.unlit.bottom tcp_meter_color
					set tcp.meter.scale.color.unlit.top tcp_meter_color
					set tcp.meter.scale.color.lit.bottom tcp_meter_color
					set tcp.meter.scale.color.lit.top tcp_meter_color

			; Buttons
				; Fx
					; Add fx button at its position, fixing width to 15.
					set tcp.fx !fx_group{2} [0] [fx_group fx_group 15 tcp_row_height]

					; Fx bypass button, after fx button, width of 12
					set tcp_fxbyp_x + tcp.fx{0} tcp.fx{2}
					set tcp.fxbyp !fx_group{2} [0] [tcp_fxbyp_x tcp.fx 12 tcp_row_height]

				; Fx input, with padding for button.
					set tcp.fxin !input_group{2} [0] [input_group input_group 20 tcp_row_height]
					; Text item is larger and has reduced width for the button.
					set tcp.recinput - + [tcp.fxin{2}] [tcp.fxin tcp.fxin input_group tcp_row_height] [0 0 tcp.fxin{2}]
					; Margin right 20 is to prevent overlap with the icon.
					set tcp.recinput.margin [1 0 0 0]
					set tcp.recinput.font [0]

				; Fx and record input, with padding for button

				; Volume
					set tcp.volume [tcp.volume tcp.volume tcp.volume tcp_row_height]
					set tcp.volume.fadermode 1

				; Pan
					set tcp.pan [tcp.pan tcp.pan tcp.pan tcp.pan]
					set tcp.pan.fadermode [1]

				; Width
					set tcp.width [tcp.width tcp.width tcp.width tcp_row_height]
					set tcp.width.fadermode 1

			; Label
				set tcp.label.color track_text_color
				set tcp.label ?tcp_supercollapsed{0} tcp_label_section_collapsed tcp_label_section
				set tcp.label.margin ?tcp_supercollapsed{0} [0 0 0 0 1 0.5] [0 -2 0 0 0 0.5]

			; Fx parameter controls list
				set tcp.fxparm [tcp_button_section main_section_last_visible_element{0} tcp_button_section tcp_button_section]
				set tcp.fxparm.font [0]
				set tcp.fxparm.margin [0]
		endMacro

	; Master Track Panel
		macro compute_master_ctp
			; Main section
				set master_tcp_button_section - w meter_section{2}
				set tcp_button_section [0 0 master_tcp_button_section h]

			; Meter
				set meter_section [master_tcp_button_section 0 tcp_meter_width h]

			set tcpNullElement [tcp_button_section]
			set previous_element tcpNullElement
		endMacro

		macro draw_master_tcp
			; Default and Min Size
				set master.tcp.size tcp.size
				set master.tcp.margin [0]

				set master.tcp.meter meter_section
				set master.tcp.meter.vu.div [1]
				set master.tcp.meter.readout.color tcp_meter_color
				set master.tcp.meter.scale.color.unlit.bottom tcp_meter_color
				set master.tcp.meter.scale.color.unlit.top tcp_meter_color
				set master.tcp.meter.scale.color.lit.bottom tcp_meter_color
				set master.tcp.meter.scale.color.lit.top tcp_meter_color

			; Label
				set master.tcp.label.color [255 255 255 255]
				set master.tcp.label.font [0]

			; FX
				set master.tcp.fx  !master_fx_group{2} [0] + [0 0 15] [master_fx_group master_fx_group 0 tcp_row_height]
				set master.tcp.fxbyp  !master_fx_group{2} [0] + + [0 0 12] [master.tcp.fx master.tcp.fx 0 tcp_row_height] [master.tcp.fx{2}]
			
			; Volume
				set master.tcp.volume !master.tcp.volume{2} [0 0 0 0] [master.tcp.volume master.tcp.volume master.tcp.volume tcp_row_height]
				set master.tcp.volume.fadermode 1
				set master.tcp.volume.label [0]

			; Pan
				set master.tcp.pan !master.tcp.pan{2} [0 0 0 0] [master.tcp.pan master.tcp.pan tcp_row_height tcp_row_height]
				set master.tcp.pan.fadermode 1
				set master.tcp.pan.label [0]

			; Width
				set master.tcp.width !master.tcp.width{2} [0 0 0 0] [master.tcp.width master.tcp.width master.tcp.width tcp_row_height]
				set master.tcp.width.fadermode 1
				set master.tcp.width.label [0]

			; Fx Param
				set master.tcp.fxparm [tcp_button_section main_section_last_visible_element{0} tcp_button_section tcp_button_section]
				set master.tcp.fxparm.margin [0]
				set master.tcp.fxparm.font [0]
		endMacro

	; Envelope Control Panel
		macro compute_envcp
			set envcp.size tcp.size

		; Buttons section
			set envcp_button_section_width - - w envcp_label_min_width envcp_value_width
			; Width can't be lower than 0
			set envcp_button_section_width envcp_button_section_width{0}<0 0 .
			; Width can't be above max
			set envcp_button_section_width envcp_button_section_width{0}>envcp_button_max_width{0} envcp_button_max_width .
			set envcp_button_section [0 0 envcp_button_section_width h]
			set envcp_button_section h<20 [0] .

		; Label section
			set envcp_label_section_width - - w envcp_button_section_width envcp_value_width
			set envcp_label_section [envcp_button_section{2} 0 envcp_label_section_width h]

		; Value section
			set envcp_value_section - [w 0 envcp_value_width h] [envcp_value_width]

			set previous_element [envcp_button_section]
		endMacro

		macro draw_envcp
			set envcp.margin [0 0 0 0]

			set envcp.label envcp_label_section
			set envcp.label.color envcp_text_color
			set envcp.label.margin [1 0 1 0 0 0.5 0]
			set envcp.label.font [0]

			; Value
				set envcp.value envcp_value_section
				set envcp.value.font [0]
				set envcp.value.color envcp_text_color


				set envcp_value_alignment_width * 2 envcp_value_width
				set envcp_value_horizontal_alignment h>envcp_value_alignment_width{0} 0.5 1
				set envcp.value.margin [0 0 0 0 envcp_value_horizontal_alignment 0.5]

			; Fader
				set envcp.fader.color [54 217 190] ; TODO
				set envcp.fader.fadermode 1
		endMacro

	; Then macro to handle elements one after the other
		macro then element element_width
			; Previous end is the previous element position + width
			set prev_end + previous_element{0} previous_element{2}

			; Place the current element at the previous end, save width and height
			set element [prev_end previous_element element_width tcp_row_height]

			; if hidden, set width to 0
			set element ?hide_##element{0} [. . 0 tcp_row_height]

			; Compute current element rightmost point: it's position + width, minus
			; the main section position.
			set element_rightmost - + element{0} element{2} button_section{0}

			; If collapsed, change the width and height to 0 0
			set element ?tcp_button_section_hidden{0} [. . 0 0]

			; Get top of next row
			set next_row + [0 previous_element{3}] [0 element]

			; If element overflows, move to next row. 5 here is a padding
			; for preventing visual overflow;
			set right_space_left - + element_rightmost{0} 5 button_section{2}
			set element right_space_left{0}>0 [button_section next_row element element]
		
			; Recalculate element_rightmost, now that the element is on a new row
			set element_rightmost - + element{0} element{2} button_section{0}
			set right_space_left - + element_rightmost{0} 5 button_section{2}

			; Remove if still not fitting
			set element right_space_left{0}>0 [. . 0 0]
			
			; Find its bottom: top + height
			set element_bottom + element{1} element{3}

			; Cull if there's not enough height to fit, or if previous_element was culled;
			set element element_bottom{0}>button_section{3} [. . 0 0] .

			; Save reference to previous element
			set previous_element element

			; save reference to main last visible element
			set main_section_last_visible_element element{3}>0 element_bottom{0} .
		endmacro

	; Mixer Control Panel
		macro draw_mcp
			clear mcp.*

			; Hide unused elements
				set mcp.env [0]
				set mcp.extmixer.mode [0]
				set mcp.fx [0]
				set mcp.fxbyp [0]
				set mcp.fxin [0]
				set mcp.io [0]
				set mcp.recarm [0]
				set mcp.recinput [0]
				set mcp.recmode [0]
				set mcp.recmon [0]

			; Main section
				set mcp.size [mcp_width]
				set mcp.margin [mcp_margin_h 0 mcp_margin_h 4]

			; Track ID
				set mcp.trackidx [0 0 w mcp_label_height]
				set mcp.trackidx.margin [0 0 0 0 0.5 0.5]
				set mcp.trackidx.color track_text_color

			; Label
				set mcp.label + [0 mcp.trackidx{1} w mcp_label_height] [0 mcp.trackidx{3}]
				set mcp.label.margin mcp.trackidx.margin
				set mcp.label.color mcp.trackidx.color

			; Columns definition
				set mcp_column_section_height - - h * mcp_label_height 2 mcp_label_margin
				set mcp_column_section_x + + mcp.label{1} mcp.label{3} mcp_label_margin
				set mcp_left_column_section [0 mcp_column_section_x mcp_column_width mcp_column_section_height]
				set mcp_right_column_section + + mcp_left_column_section [mcp_margin_h] [mcp_column_width]

			; Left column
				; Meter
					set mcp.meter mcp_left_column_section
					set mcp.meter.vu.div [1]
					set mcp.meter.readout.color mcp_meter_readout_color
					set mcp.meter.scale.color.unlit.bottom mcp_meter_unlit_color
					set mcp.meter.scale.color.unlit.top mcp_meter_unlit_color
					set mcp.meter.scale.color.lit.bottom mcp_meter_lit_color
					set mcp.meter.scale.color.lit.top mcp_meter_lit_color

			; Right column: buttons
				; Volume
					set mcp.volume [mcp_right_column_section{0} mcp_right_column_section{1} 20 20]
					set mcp.volume.label [0]

				; Pan
					set mcp.pan + [mcp_right_column_section{0} mcp.volume{1} 20 20] [0 mcp.volume{3}]
					set mcp.pan.fadermode 1

				; Width
					set mcp.width + [mcp_right_column_section{0} mcp.pan{1} 20 20] [0 mcp.pan{3}]
					set mcp.width.fadermode 1

				; Phase
					set mcp.phase + [mcp_right_column_section{0} mcp.width{1} 20 20] [0 mcp.width{3}]

				; Mute
					set mcp.mute + [mcp_right_column_section{0} mcp.phase{1} 20 20] [0 mcp.phase{3}]

				; Solo
					set mcp.solo + [mcp_right_column_section{0} mcp.mute{1} 20 20] [0 mcp.mute{3}]

				; Folder
					set mcp.folder + + [mcp_right_column_section{0} mcp_right_column_section{1} 20 20] [0 mcp_right_column_section{3}] [0 -20]
		endMacro

		macro draw_master_mcp
			clear master.mcp.*

			; Hide unused
				set master.mcp.env [0]
				set master.mcp.extmixer.mode [0]
				set master.mcp.fx [0]
				set master.mcp.fxbyp [0]
				set master.mcp.fxin [0]
				set master.mcp.io [0]
				set master.mcp.recarm [0]
				set master.mcp.recinput [0]
				set master.mcp.recmode [0]
				set master.mcp.recmon [0]
				set master.mcp.menubutton [0]

			; Set size
				set master.mcp.size [mcp_master_width]
				set master.mcp.margin [mcp_margin_h 0 mcp_margin_h 4]

			; TODO
				set master.mcp.fxlist.margin mcp.fxlist.margin
				set master.mcp.sendlist.margin mcp.sendlist.margin
				set master.mcp.fxparm.margin mcp.fxparm.margin

			; Label
				; Double the size of the mcp_label_height to align with normal mcp columns
				set master.mcp.label * [0 0 w mcp_label_height] [1 1 1 2]
				set master.mcp.label.color [255 255 255]
				set master.mcp.label.margin [0 0 0 0 0.5 0.5]

			; Column definition
				set mcp_column_section_height - - h * mcp_label_height 2 mcp_label_margin
				set mcp_master_column_section_x + master.mcp.label{3} mcp_label_margin
				set mcp_master_left_column_width * mcp_column_width 3
				set mcp_master_left_column_section [0 mcp_column_section_x mcp_master_left_column_width mcp_column_section_height]
				set mcp_master_right_column_section + + mcp_left_column_section [mcp_margin_h] [mcp_master_left_column_section{2}]

			; Righ column: Meter
				set master.mcp.meter mcp_master_left_column_section
				set master.mcp.meter.vu.div [1]
				set master.mcp.meter.vu.rmsdiv [3]
				set master.mcp.meter.readout.color mcp_meter_readout_color
				set master.mcp.meter.scale.color.lit.bottom mcp_meter_lit_color
				set master.mcp.meter.scale.color.lit.top mcp_meter_lit_color
				set master.mcp.meter.scale.color.unlit.bottom mcp_meter_unlit_color
				set master.mcp.meter.scale.color.unlit.top mcp_meter_unlit_color

			; Righ column: buttons
				; Volume
					set master.mcp.volume [mcp_master_right_column_section{0} mcp_master_right_column_section{1} 20 20]
					set master.mcp.volume.label [0]

				; Pan
					set master.mcp.pan + [mcp_master_right_column_section{0} master.mcp.volume{1} 20 20] [0 master.mcp.volume{3}]
					set master.mcp.pan.fadermode 1

				; Width
					set master.mcp.width + [mcp_master_right_column_section{0} master.mcp.pan{1} 20 20] [0 master.mcp.pan{3}]
					set master.mcp.width.fadermode 1

				; Mono
					set master.mcp.mono + [mcp_master_right_column_section{0} master.mcp.width{1} 20 20] [0 master.mcp.width{3}]
					set master.mcp.mono.fadermode 1

				; Mute
					set master.mcp.mute + [mcp_master_right_column_section{0} master.mcp.mono{1} 20 20] [0 master.mcp.mono{3}]

				; Solo
					set master.mcp.solo + [mcp_master_right_column_section{0} master.mcp.mute{1} 20 20] [0 master.mcp.mute{3}]
		endmacro

; Track control panels
	clear tcp.*

	; z-index
	front tcp.trackidx tcp.foldercomp tcp.folder tcp.label tcp.meter
	compute_tcp

	; Save button section for current track
	set button_section tcp_button_section

	then tcp.recarm  20
	then tcp.recmon  20
	then tcp.volume  20
	then tcp.pan     20
	then tcp.width   20
	then tcp.mute    20
	then tcp.solo    20
	then tcp.phase   20
	then tcp.io      20
	then fx_group    27
	then tcp.env     20
	then tcp.recmode 20
	then input_group 100

	draw_tcp

; Master Track Control Panel
	compute_master_ctp

	;set button_section master_tcp_button_section
	then master.tcp.label  50
	then master.tcp.volume 20
	then master.tcp.pan    20
	then master.tcp.width  20
	then master.tcp.mono   20
	then master.tcp.mute   20
	then master.tcp.solo   20
	then master.tcp.io     20
	then master_fx_group   27
	then master.tcp.env    20

	draw_master_tcp

; Envelope Control Panels
	clear envcp.*

	compute_envcp
	set button_section envcp_button_section

	then envcp.arm    20
	then envcp.bypass 20
	then envcp.fader  20
	then envcp.mod    30
	then envcp.learn  30
	then envcp.hide   30

	draw_envcp

; Mixer
	draw_mcp
	draw_master_mcp

; Transport
	clear trans.*

	; Addition of all the elements inside
	set trans_section_width 320

	; Center the section (window - section)/2
		set trans_section / - w trans_section_width{0} 2

	; Buttons
		set trans.rew    + [trans_section 0 30 30]
		set trans.play   + [trans.rew 0 30 30]  [trans.rew{2}]
		set trans.rec    + [trans.play 0 30 30] [trans.play{2}]
		set trans.repeat + [trans.rec 0 30 30 ] [trans.rec{2}]

	; Time signature
		set trans.curtimesig + [trans.repeat 6 40 18] [trans.repeat{2}]

	; BPM
		set trans.bpm.tap + + [trans.curtimesig trans.curtimesig 30 18] [trans.curtimesig{2}]
		set trans.bpm.tap.margin [0 0 0 0 0.5 0.5]

		set trans.bpm.edit + trans.bpm.tap [trans.bpm.tap{w}]
		set trans.bpm.edit.margin [0 0 0 0 0.5 0.5]

	; Play rate
		set trans.rate + [trans.bpm.edit trans.bpm.edit 70 20] [trans.bpm.edit{2}]
		set trans.rate.margin [0 0 0 0 -1 0.5]
		set trans.rate.fader [0]
